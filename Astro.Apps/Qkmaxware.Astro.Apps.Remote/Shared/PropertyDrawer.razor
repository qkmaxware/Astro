@using System.Collections;
@using System.Collections.Generic;

<div>
    <div class="w3-indigo w3-row-padding w3-xlarge">
        <div class="w3-col s4">
            Property
        </div>
        <div class="w3-col s4">
            &nbsp;
        </div>
        <div class="w3-col s4">
            Value
        </div>
    </div>
    @if (Properties != null) {
        foreach (var prop in Properties) {
            <div class="w3-row-padding">
                <div class="w3-col s4">
                    <b>@prop.Key</b> (@(prop.Value.IndiTypeName))
                </div>
                <div class="w3-col s4">
                    &nbsp;
                </div>
                <div class="w3-col s4">
                    @if (!(prop.Value is IEnumerable)) {
                       <span>@prop.Value.ToString()</span> 
                    } else {
                        <span>&nbsp;</span>
                    }
                </div>
            </div>
            @if (prop.Value is IEnumerable ie) {
                var list = ((IEnumerable<IndiValue>)ie).ToList<IndiValue>();
                if (list.Count > 0) {
                    @foreach (IndiValue value in list) {
                        <div class="w3-row">
                            <div class="w3-col s4">
                                &nbsp;
                            </div>
                            <div class="w3-col s4">
                                @value.Name
                            </div>
                            <div class="w3-col s4">
                                @value.ToString()
                            </div>
                        </div>
                    }
                }
            }
            <div class="w3-border-bottom"></div>
        }
    }
</div>

@code {
    [Parameter]
    public IndiPropertiesContainer Properties {get; set;}

    public void Clear() {
        this.Properties = null;
        StateHasChanged();
    }
    public void Update(IndiPropertiesContainer properties) {
        this.Properties = properties;
        StateHasChanged();
    }
}