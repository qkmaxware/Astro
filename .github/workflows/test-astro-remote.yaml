name: Test Astro.Remote
on:
  push: 
    branches: 
    - "*"
jobs:
  Windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Setup NPM 
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Setup Dotnet
        uses: actions/setup-dotnet@v1 
        with:
          dotnet-version: '5.0.x' # SDK Version to use

      - name: Install Electron Tooling
        env: 
          GITHUB_USERNAME: qkmaxware
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: dotnet tool install ElectronNET.CLI -g

      - name: Restore Dependencies
        env: 
          GITHUB_USERNAME: qkmaxware
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: dotnet restore

      - name: Build x64 Binary
        env: 
          GITHUB_USERNAME: qkmaxware
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cd Astro.Apps\Qkmaxware.Astro.Apps.Remote; electronize build /target win

      - name: Check Binaries
        run: ls Astro.Apps\Qkmaxware.Astro.Apps.Remote\bin\Desktop\

      - name: Rename x64 Binary
        run: Rename-Item -Path "Astro.Apps\Qkmaxware.Astro.Apps.Remote\bin\Desktop\Astro.Remote 1.0.0.exe" -NewName Astro.Remote.Windows.x64.exe
        
  MacOS:
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Setup NPM 
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Setup Dotnet
        uses: actions/setup-dotnet@v1 
        with:
          dotnet-version: '5.0.x' # SDK Version to use

      - name: Install Electron Tooling
        env: 
          GITHUB_USERNAME: qkmaxware
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: dotnet tool install ElectronNET.CLI -g

      - name: Restore Dependencies
        env: 
          GITHUB_USERNAME: qkmaxware
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: dotnet restore

      - name: Build x64 Binary
        env: 
          GITHUB_USERNAME: qkmaxware
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cd Astro.Apps/Qkmaxware.Astro.Apps.Remote && electronize build /target osx
      
      - name: Check Binaries
        run: ls Astro.Apps/Qkmaxware.Astro.Apps.Remote/bin/Desktop/

      - name: Rename x64 Binary
        run: mv "Astro.Apps/Qkmaxware.Astro.Apps.Remote/bin/Desktop/Astro.Remote-1.0.0-mac.zip" "Astro.Remote.Mac.x64.zip"

  Linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Setup NPM 
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Setup Dotnet
        uses: actions/setup-dotnet@v1 
        with:
          dotnet-version: '5.0.x' # SDK Version to use

      - name: Install Electron Tooling
        env: 
          GITHUB_USERNAME: qkmaxware
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: dotnet tool install ElectronNET.CLI -g

      - name: Restore Dependencies
        env: 
          GITHUB_USERNAME: qkmaxware
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: dotnet restore

      - name: Build x64 Binary
        env: 
          GITHUB_USERNAME: qkmaxware
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cd Astro.Apps/Qkmaxware.Astro.Apps.Remote && electronize build /target linux

      - name: Check Binaries
        run: ls Astro.Apps/Qkmaxware.Astro.Apps.Remote/bin/Desktop/

      - name: Rename x64 Binary
        run: mv "Astro.Apps/Qkmaxware.Astro.Apps.Remote/bin/Desktop/Astro.Remote-1.0.0.AppImage" "Astro.Remote.Linux.x64.AppImage"
