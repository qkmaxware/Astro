name: Publish Astro.Remote
on:
  push: 
    branches: 
    - "*"
jobs:
  Windows:
    runs-on: ${{ matrix.os }}
    strategy: 
      fail-fast: false
      matrix: 
        os: [ windows-latest ]
        dotnet: [ '3.1.x' ]
    steps:
    - name: Checkout Code
      uses: actions/checkout@master
    - name: Setup .NET Core - ${{ matrix.dotnet }}@${{ matrix.os }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '${{ matrix.dotnet }}'
    - name: Build
      env: 
        GITHUB_USERNAME: qkmaxware
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd Astro.Remote
        cd Astro.Remote.Windows
        dotnet restore --configfile "..\..\nuget.config"
        dotnet publish -c Release
    - name: Compress
      uses: thedoctor0/zip-release@master
      with: 
        filename: 'release.zip'
        directory: Astro.Remote.Windows\bin\Release\netcoreapp3.1
    - name: Upload
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "release.zip"

  MacOS:
    runs-on: ${{ matrix.os }}
    strategy: 
      fail-fast: false
      matrix: 
        os: [ macos-latest ]
        dotnet: [ '3.1.x' ]
    steps:
    - name: Checkout Code
      uses: actions/checkout@master
    - name: Setup .NET Core - ${{ matrix.dotnet }}@${{ matrix.os }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '${{ matrix.dotnet }}'
    - name: Build
      env: 
        GITHUB_USERNAME: qkmaxware
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd Astro.Remote
        cd Astro.Remote.macOS
        dotnet restore --configfile "..\..\nuget.config"
        dotnet publish -c Release
    - name: Compress
      uses: thedoctor0/zip-release@master
      with: 
        filename: 'release.zip'
        directory: Astro.Remote.Windows\bin\Release\netcoreapp3.1
    - name: Upload
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "release.zip"

  Android:
    runs-on: ${{ matrix.os }}
    strategy: 
      fail-fast: false
      matrix: 
        os: [ macos-latest ]
        dotnet: [ '3.1.x' ]
    steps:
    - name: Checkout Code
      uses: actions/checkout@master
    - name: Setup .NET Core - ${{ matrix.dotnet }}@${{ matrix.os }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '${{ matrix.dotnet }}'
    - name: Build
      env: 
        GITHUB_USERNAME: qkmaxware
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd Astro.Remote
        cd Astro.Remote.Android
        dotnet restore --configfile "..\..\nuget.config"
        dotnet publish -c Release
    - name: Compress
      uses: thedoctor0/zip-release@master
      with: 
        filename: 'release.zip'
        directory: Astro.Remote.Windows\bin\Release\netcoreapp3.1
    - name: Upload
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "release.zip"

  IOS:
    runs-on: ${{ matrix.os }}
    strategy: 
      fail-fast: false
      matrix: 
        os: [ macos-latest ]
        dotnet: [ '3.1.x' ]
    steps:
    - name: Checkout Code
      uses: actions/checkout@master
    - name: Setup .NET Core - ${{ matrix.dotnet }}@${{ matrix.os }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '${{ matrix.dotnet }}'
    - name: Build
      env: 
        GITHUB_USERNAME: qkmaxware
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd Astro.Remote
        cd Astro.Remote.iOS
        dotnet restore --configfile "..\..\nuget.config"
        dotnet publish -c Release
    - name: Compress
      uses: thedoctor0/zip-release@master
      with: 
        filename: 'release.zip'
        directory: Astro.Remote.Windows\bin\Release\netcoreapp3.1
    - name: Upload
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "release.zip"