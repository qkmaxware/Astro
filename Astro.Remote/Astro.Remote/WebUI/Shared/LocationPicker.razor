<Popup @ref=popup>
    <div class="w3-container w3-padding">
        <div class="w3-row">
            <div class="w3-half w3-row">
                <div class="w3-col w3-padding w3-right-align" style="width: 72px;">
                    <button class="w3-button" @onclick=getgps title="current location">
                        <img src="/assets/currentLocation.svg" width=32 height=32>
                    </button>
                </div>
                <div class="w3-rest">
                    <div class="w3-padding">
                        <label>Latitude</label>
                        <input class="w3-input w3-dark-grey" @bind=lat type="number">
                    </div>
                    <div class="w3-padding">
                        <label>Longitude</label>
                        <input class="w3-input w3-dark-grey" @bind=lon type="number">
                    </div>
                </div>
            </div>
            <div class="w3-half w3-dark-grey w3-padding">
                <SearchableCollection Items="CityCatalogue.Cities" OnSelectionChanged=setViaSearch />
            </div>
        </div>
        <div class="w3-row w3-padding">
            <div class="w3-col s6 w3-left-align">
                <button class="w3-button w3-red" @onclick=cancel>Cancel</button>
            </div>
            <div class="w3-col s6 w3-right-align">
                <button class="w3-button w3-green" @onclick=confirm>Confirm</button>
            </div>
        </div>
    </div>
</Popup>

<Dialog @ref=dialog></Dialog>

@code {
    private double lat;
    private double lon;
    private double alt;

    private double savedLat;
    private double savedLon;
    private double savedAlt;

    [Parameter]
    public Action<double, double, double> OnLocationChanged {get; set;}

    private Dialog dialog;
    private Popup popup;

    public void Show() {
        lat = savedLat;
        lon = savedLon;
        alt = savedAlt;
        popup.Show();
        StateHasChanged();
    }

    public void Hide() {
        popup.Hide();
        StateHasChanged();
    }

    private void setViaSearch(City selected) {
        this.lat = selected.Latitude;
        this.lon = selected.Longitude;
        StateHasChanged();
    }

    private void getgps() {
        try {
            var loc = Position.GetLocation();
            if (loc != null) {
                this.lat = loc.Latitude;
                this.lon = loc.Longitude;
                this.alt = loc.Altitude.HasValue ? loc.Altitude.Value : 0;
            }
        } catch (Exception e) {
            dialog.Show("Error", e.Message);
        }
    }

    private void cancel() {
        Hide();
    }

    private void confirm() {
        savedLat = lat;
        savedLon = lon;
        savedAlt = alt;
        OnLocationChanged?.Invoke(savedLat, savedLon, savedAlt);
        Hide();
    }
}